#
# Copyright 2024 Open Text.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Docker registry
ARG DOCKER_HUB_PUBLIC=docker.io

# Reference the base image we normally use
FROM ${DOCKER_HUB_PUBLIC}/cafapi/prereleases:opensuse-base-2.10.0-SNAPSHOT AS usual-base

#
# Stage 1
#
FROM ${DOCKER_HUB_PUBLIC}/opensuse/tumbleweed:latest AS stage1

# Set the locale manually to a set inherited from the base image (defaults to POSIX)
ENV LANG=en_US.utf8

# Copy custom crypto-policy file
COPY --from=usual-base /etc/crypto-policies/policies/modules/DISABLE-CBC.pmod /etc/crypto-policies/policies/modules

# Update the OS packages, install cURL, postgreSQL client and dejavu-fonts
# Install crypto-policies-scripts and disable weaker security algorithms
RUN zypper -n refresh && \
    zypper -n update && \
    zypper -n install curl postgresql dejavu-fonts crypto-policies-scripts && \
    update-crypto-policies --set DEFAULT:DISABLE-CBC && \
    sed -rie '/^jdk.tls.disabledAlgorithms=/s/$/, TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256/' \
        /etc/crypto-policies/back-ends/java.config && \
    zypper -n remove -u crypto-policies-scripts && \
    zypper -n clean --all

# Copy su-exec and create symlink for gosu
COPY --from=usual-base /usr/local/bin/su-exec /usr/local/bin/su-exec
RUN ln -s /usr/local/bin/su-exec /usr/local/bin/gosu

# Add scripts to be executed during startup
COPY --from=usual-base /startup /startup

# Add Tini
ENV TINI_VERSION v0.19.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini
RUN chmod +x /tini
ENTRYPOINT ["/tini", "--", "/startup/startup.sh"]

# Add other useful scripts
COPY --from=usual-base /scripts /scripts

# Refresh the OS repositories and install OpenJDK 21 Runtime Environment
RUN zypper -n refresh && \
    zypper -n update && \
    zypper -n install java-21-openjdk && \
    zypper -n clean --all

# Install Java certificate installation script
ADD https://raw.githubusercontent.com/CAFapi/caf-common/v1.19.0/container-cert-script/install-ca-cert-java.sh \
    /startup/startup.d/
RUN chmod +x /startup/startup.d/install-ca-cert-java.sh

# Set JRE Home
ENV JRE_HOME=/usr/lib64/jvm/java-21-openjdk-21

#
# Stage 2: Create the NSS database
#
FROM stage1 AS stage2

RUN zypper -n install mozilla-nss-tools

RUN mkdir /etc/pki/nssdb
RUN certutil -N --empty-password -d /etc/pki/nssdb/
RUN chmod +r /etc/pki/nssdb/*

#
# Stage 3: The remainder of the actual image definition
#
FROM stage1

# Copy nssdb
COPY --from=stage2 /etc/pki/nssdb /etc/pki/nssdb
